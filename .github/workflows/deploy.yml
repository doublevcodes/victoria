name: Deploy Terraform configuration files

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    name: Lint Terraform
    strategy:
      matrix:
        directory: [cloudflare]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Enter provider directory
        run: cd ${{ matrix.directory }}

      - name: Setup TFLint
        uses: terraform-linters/setup-tflint@v1

      - name: Initialise TFLint
        run: tflint --init

      - name: Run TFLint
        run: tflint -f compact

  cloudflare:
    runs-on: ubuntu-latest
    needs: lint
    name: Cloudflare
    defaults:
      run:
        working-directory: cloudflare
    env:
      CLOUDFLARE_EMAIL: ${{ secrets.CF_EMAIL }}
      CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        
      - name: Initialise Terraform
        id: init
        run: terraform init
        
      - name: Validate Terraform files
        id: validate
        run: terraform validate -no-color
        continue-on-error: false
        
      - name: Plan Terraform changes
        id: plan
        run: |
          terraform plan -no-color
          terraform plan -no-color > plan.txt
          terraform plan -out=tf_plan.txt
          ls
        continue-on-error: false
        
      - name: Upload Terraform plan artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Terraform plan
          path: cloudflare/plan.txt
          
      - name: Upload Terraform-generated plan
        uses: actions/upload-artifact@v2
        with:
          name: Terraform-generated plan
          path: cloudflare/tf_plan.txt
          
      - name: Apply Terraform changes
        id: apply
        run: terraform apply -auto-approve
